from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

import random
import requests
import os
import asyncio
import time
import logging

from bs4 import BeautifulSoup
from config import TOKEN,DEVELOPER

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

# Check have user admin in group
async def is_admin_group(chat_id, user_id):
    try:
        result = await bot.get_chat_member(chat_id, user_id)
        if "administrator" in result["status"] or "creator" in result["status"]:
            return True
        return False
    except Exception as e:
        print("CHECK ADMIN: %s" % repr(e))
        
# Check game in chat
def is_game_in_chat(chat_id):
    name_file_chat = "chats/%d.txt" % chat_id
    try:
        file = open(name_file_chat)
        text = file.read()
        file.close()
        if "ASSOCIATIONS" in text or "CROSSES" in text:
            return True
    except Exception as e:
        print("Check game: %s" % repr(e))
    return False

# Create chat 
def create_chat(chat_id):
    try:
        name_file_chat = "chats/%d.txt" % chat_id
        chat = open(name_file_chat, "+w")
        chat.close()
    except Exception as e:
        print("Create chat: %s" % repr(e))

# Take info game
def get_params_game(chat_id):
    try:
        name_file_chat = "chats/%d.txt" % chat_id
        data = open(name_file_chat)
        info = data.read()
        data.close()
        return info
    except Exception as e:
        print("Get params: %s" % repr(e))
    
# Check have user
def is_have_user(user_id):
    try:
        name_file_chat = "users/%d.txt" % user_id
        file = open(name_file_chat)
        text = file.read()
        file.close()
        if len(text) == 0:
            return True
    except Exception as e:
        return True
    return False

def set_user_game(user_id, game):
    try:
        name_file_user = "users/%d.txt" % user_id
        file = open(name_file_user, "+w")
        file.write(str(game))
        file.close()
    except Exception as e:
        print("Set game user: %s" % repr(e))   

# Type: new member
@dp.message_handler(content_types=["new_chat_members"])
async def new_chat_members_delete(message):
    try:
        if await is_admin_group(message.chat.id, message.bot.id):
            await bot.delete_message(message.chat.id, message.message_id)
        if message.new_chat_members[0].id == bot.id:
            # KeyBoard
            buttons  = [ 
            types.InlineKeyboardButton(text='–ò–≥—Ä—ã üìå', callback_data="–ò–≥—Ä—ã"),
            types.InlineKeyboardButton(text='–ü–æ–º–æ—â—å ‚óÄ', callback_data="–ü–æ–º–æ—â—å")
            ] 
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            keyboard.add(*buttons)
            create_chat(message.chat.id)
            return await message.answer("üçç –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, –≥–æ—Å–ø–æ–¥–∞!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç - *–ê–Ω–∞–Ω–∞—Å—ã—á*\n–Ø –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç\n\n–° –º–æ–µ–π –ø–æ–º–æ—â—å—é –º–æ–∂–Ω–æ:\nüíæ –ò–≥—Ä–∞—Ç—å –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏–≥—Ä—ã\nüëÆ –°–ª–µ–¥–∏—Ç—å –∑–∞ –ø–æ—Ä—è–¥–∫–æ–º\nüîî –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç\n\n***–¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –≤—ã–¥–∞—Ç—å –º–Ω–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞***", parse_mode="Markdown", reply_markup=keyboard)
        else:
            return await message.answer("üçç[%s](tg://user?id=%d), *–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ %s*" % (message.new_chat_members[0].first_name, message.new_chat_members[0].id,message.chat.full_name), parse_mode="Markdown")
    except Exception as e:
        print("NEW CHAT MEMBERS: %s" % repr(e))

# Type: left member
@dp.message_handler(content_types=["left_chat_member"])
async def new_chat_members_delete(message):
    try:
        if await is_admin_group(message.chat.id, message.bot.id):
            await bot.delete_message(message.chat.id, message.message_id)
        await message.answer("üçç [%s](tg://user?id=%d) –ø–æ–∫–∏–Ω—É–ª(-–∞) *%s*" % (message.left_chat_member.first_name, message.left_chat_member.id,message.chat.full_name), parse_mode="Markdown")
    except Exception as e:
        print("LEFT CHAT MEMBERS: %s" % repr(e))

# Command: start
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    try:
        buttons  = [ 
        types.InlineKeyboardButton(text='–ò–≥—Ä—ã üìå', callback_data="–ò–≥—Ä—ã"),
        types.InlineKeyboardButton(text='–ü–æ–º–æ—â—å ‚óÄ', callback_data="–ü–æ–º–æ—â—å")
        ] 
        keyboard = types.InlineKeyboardMarkup(row_width=2)
        keyboard.add(*buttons)
        Check_bot = await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é - —è –ê–Ω–∞–Ω–∞—Å—ã—á üçç\n–ú–Ω–æ–≥–æ—Å–ø–æ—Å–æ–±–Ω—ã–π –±–æ—Ç –¥–ª—è –≤–µ—Å–µ–ª—å—è!", reply_markup=keyboard)
        if message.chat.id != message.from_user.id and await is_admin_group(message.chat.id, Check_bot.bot.id) == False:
            await bot.send_message(message.chat.id, "üçç –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–¥–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
    except Exception as e:
        print("START COMMAND: %s" % repr(e))

# Bag command
@dp.message_handler(commands=['bag'])
async def mute_command(message: types.Message):
    try:
        text = message.text.split(" ")
        if len(text) < 2:
            return await message.reply("üçç *–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è*\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /bag [–¢–µ–∫—Å—Ç]")
            
        await message.reply("üçç –°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")

        text = message.text.replace(text[0], "")
        message = "‚ö† *–°–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–≥–µ*\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: [%s](tg://user?id=%d)\n–ß–∞—Ç ID: %d\nUser ID: %d\n\n–°–æ–æ–±—â–µ–Ω–∏–µ:\n%s" % (message.from_user.first_name,message.from_user.id,message.chat.id,message.from_user.id,text)
        await bot.send_message(DEVELOPER, message, parse_mode="Markdown")
    except Exception as e:
        print("BAG COMMAND: %s" % repr(e)) 

# Admins commands
# Command: mute
@dp.message_handler(commands=['mute'])
async def mute_command(message: types.Message):
    try:
        if message.chat.id == message.from_user.id:
            return await message.answer("üçç –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö!")

        if not message.reply_to_message:
            return await message.reply("üçç –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –Ω–∞ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")

        if await is_admin_group(message.chat.id, message.bot.id) == False:
            return await bot.send_message(message.chat.id, "üçç –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–¥–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

        if message.reply_to_message.from_user.id == message.bot.id:
            return await message.reply("üçç –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É...")

        if await is_admin_group(message.chat.id, message.from_user.id) == False:
            return await bot.delete_message(message.chat.id, message.message_id)

        if await is_admin_group(message.chat.id, message.reply_to_message.from_user.id):
            return await message.reply("üçç [%s](tg://user?id=%d) —è–≤–ª—è–µ—Ç—Å—è *–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º*" % (message.reply_to_message.from_user.first_name,message.reply_to_message.from_user.id), parse_mode="Markdown")

        await message.answer("üçç [%s](tg://user?id=%d) *–Ω–µ —Å–º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç 5 –º–∏–Ω—É—Ç*" % (message.reply_to_message.from_user.first_name,message.reply_to_message.from_user.id), parse_mode="Markdown")
        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id,until_date=int(time.time()) + 60*5,can_send_messages=False)
    except Exception as e:
        print("MUTE COMMAND: %s" % repr(e))  

# Command: Kick
@dp.message_handler(commands=['kick'])
async def kick_command(message: types.Message):
    try:
        if message.chat.id == message.from_user.id:
            return await message.answer("üçç –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö!")

        if not message.reply_to_message:
            return await message.reply("üçç –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –Ω–∞ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")

        if await is_admin_group(message.chat.id, message.bot.id) == False:
            return await bot.send_message(message.chat.id, "üçç –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–¥–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

        if message.reply_to_message.from_user.id == message.bot.id:
            return await message.reply("üçç –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É...")

        if await is_admin_group(message.chat.id, message.from_user.id) == False:
            return await bot.delete_message(message.chat.id, message.message_id)

        if await is_admin_group(message.chat.id, message.reply_to_message.from_user.id):
            return await message.reply("üçç [%s](tg://user?id=%d) —è–≤–ª—è–µ—Ç—Å—è *–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º*" % (message.reply_to_message.from_user.first_name,message.reply_to_message.from_user.id), parse_mode="Markdown")

        await bot.delete_message(message.chat.id, message.message_id)
        await message.answer("üçç [%s](tg://user?id=%d) *–∫–∏–∫–Ω—É–ª(-–∞)* [%s](tg://user?id=%d)" % (message.from_user.first_name,message.from_user.id,message.reply_to_message.from_user.first_name,message.reply_to_message.from_user.id), parse_mode="Markdown")
        await bot.kick_chat_member(message.chat.id, message.reply_to_message.from_user.id)
    except Exception as e:
        print("KICK COMMAND: %s" % repr(e))  

# Games
# Command: Fanta
@dp.message_handler(commands=['fanta'])
async def fanta_command(message: types.Message):
    try:

        buttons  = [types.InlineKeyboardButton(text='–î–∞–ª—å—à–µ', callback_data="–î–∞–ª—å—à–µ")] 
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*buttons)

        data = open("fanta_message.txt", encoding="utf8")
        mission = data.read().replace("\\n", "\n").split("|")
        data.close()
        select_mission = random.randint(0,len(mission)) - 1

        await bot.send_message(message.chat.id, "üçç %s" % mission[select_mission], parse_mode="Markdown", reply_markup=keyboard)
    except Exception as e:
        print("FANTA COMMAND: %s" % repr(e))

# Command: Mafia
@dp.message_handler(commands=['mafia'])
async def start_command(message: types.Message):
    try:
        if message.chat.id == message.from_user.id:
            return await bot.send_message(message.from_user.id, "üçç –≠—Ç—É –∏–≥—Ä—É –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ)")

        if is_have_user(message.from_user.id) == False:
            return await bot.delete_message(message.chat.id, message.message_id)

        if is_game_in_chat(message.chat.id) == False:
            buttons = [types.InlineKeyboardButton(text='–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è', url="https://telegram.me/PineAppleAPP_bot?start=%d" % message.chat.id)] 
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            keyboard.add(*buttons)
            Check_bot = await message.answer("üçç [%s](tg://user?id=%d) –∑–∞–ø—É—Å—Ç–∏–ª –∏–≥—Ä—É *–º–∞—Ñ–∏—è*\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n[%s](tg://user?id=%d)" % (message.from_user.first_name,message.from_user.id,message.from_user.first_name,message.from_user.id), parse_mode="Markdown", reply_markup=keyboard)
            if message.chat.id != message.from_user.id and await is_admin_group(message.chat.id, Check_bot.bot.id) == False:
                await bot.send_message(message.chat.id, "üçç –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–¥–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
    except Exception as e:
        print("START COMMAND: %s" % repr(e))

# Command: crosses
@dp.message_handler(commands=['crosses'])
async def crosses_command(message: types.Message):
    try:
        if message.chat.id == message.from_user.id:
            return await bot.send_message(message.from_user.id, "üçç –≠—Ç—É –∏–≥—Ä—É –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ)")

        if is_have_user(message.from_user.id) == False:
            return await bot.delete_message(message.chat.id, message.message_id)

        if is_game_in_chat(message.chat.id) == False:
 
            buttons  = [types.InlineKeyboardButton(text='–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è', callback_data="–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏")] 
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            keyboard.add(*buttons)
            name_file = "chats/%d.txt" % message.chat.id

            get_info = await bot.send_message(message.chat.id, "üçç [%s](tg://user?id=%d) —Ö–æ—á–µ—Ç –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏" % (message.from_user.first_name,message.from_user.id), parse_mode="Markdown", reply_markup=keyboard)
            if message.chat.id != message.from_user.id and await is_admin_group(message.chat.id, bot.id) == False:
                await bot.send_message(message.chat.id, "üçç –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–¥–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

            data = open(name_file, "w+")
            data.write("CROSSES|%d|%s|0|None|CROSS|%d" % (message.from_user.id,message.from_user.first_name,get_info.message_id))
            data.close()

            set_user_game(message.from_user.id, message.chat.id)

            await asyncio.sleep(60)
            result = get_params_game(message.chat.id).split("|")
            if int(result[3]) == 0:
                data = open(name_file, "w+")
                data.write("")
                data.close()
                set_user_game(message.from_user.id, "")
                await bot.edit_message_text(chat_id=message.chat.id, message_id=get_info.message_id, text="üçç *–ù–∏–∫—Ç–æ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏:(*", parse_mode="Markdown",reply_markup=None)
        else:
            if await is_admin_group(message.chat.id, message.bot.id):
                await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        print("CROSSES COMMAND: %s" % repr(e))

# Command: associations
@dp.message_handler(commands=['associations'])
async def associations_command(message: types.Message):
    try:
        if is_game_in_chat(message.chat.id) == False:
            file = open("words_for_associations.txt")
            words = file.read().split(",")

            POS_WORD = random.randint(0, len(words))

            get_info = await bot.send_message(message.chat.id, "üçç –ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏\n\n[%s](tg://user?id=%d) –∑–∞–ø—É—Å—Ç–∏–ª –∏–≥—Ä—É!\n\n‚úè –ü–∏—à–∏—Ç–µ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ –∫ —Å–ª–æ–≤—É –≤ —Ç–µ—á–µ–Ω–∏–∏ 120 —Å–µ–∫—É–Ω–¥\n‚ö° –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –æ—á–∫–∏ –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ\n\n–°–ª–æ–≤–æ –¥–ª—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–π: *%s*" % (message.from_user.first_name,message.from_user.id,words[POS_WORD]), parse_mode="Markdown")
            if message.chat.id != message.from_user.id and await is_admin_group(message.chat.id, get_info.bot.id) == False:
                await bot.send_message(message.chat.id, "üçç –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–¥–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

            url = 'http://www.slovesa.ru/assearch?q=%s' % words[POS_WORD]
            response = requests.get(url)
            soup = BeautifulSoup(response.text, 'lxml')
            sections = soup.find_all('div', class_='tagcloud')

            name_file = "chats/associations/%d.txt" % message.chat.id
            words_file = open(name_file, "w+")
            for item in sections:
                words_file.write(item.get_text().replace('¬† ', ',').replace(" ", "").replace(",–ê,–ë,–í,–ì,–î,–ï,–ñ,–ó,–ò,–ö,–õ,–ú,–ù,–û,–ü,–†,–°,–¢,–£,–§,–•,–¶,–ß,–®,–©,–≠,–Æ,–Ø,", ""))

            words_file.close()

            name_file = "chats/%d.txt" % message.chat.id
            data = open(name_file, "w+")
            data.write("ASSOCIATIONS")
            data.close()

            await asyncio.sleep(60)
            await bot.send_message(message.chat.id, "üçç *–ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏*\n\n‚åõ–û—Å—Ç–∞–ª–æ—Å—å: 60 —Å–µ–∫—É–Ω–¥...", parse_mode="Markdown")

            await asyncio.sleep(30)
            await bot.send_message(message.chat.id, "üçç *–ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏*\n\n‚åõ–û—Å—Ç–∞–ª–æ—Å—å: 30 —Å–µ–∫—É–Ω–¥...", parse_mode="Markdown")

            await asyncio.sleep(30)
            data = open(name_file)
            records = data.read().replace("ASSOCIATIONS|", "").split("|")
            data.close()

            count = 0
            people = 1
            score = []

            text_message = "üçç *–ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏*\n\n–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n"

            for i in range(len(records)):
                try:
                    text_message += "%d. [%s](tg://user?id=%s) - ‚ö° %s\n" %  (people, records[count + 1], records[count], records[count + 2])
                    score.append(records[count + 2])
                    count += 3
                    people += 1
                    if count >= len(records):
                        break
                except Exception as e:
                    print("ASSOCIATIONS COMMAND(FOR): %s" % repr(e))

            name_file = "chats/%d.txt" % message.chat.id
            data = open(name_file, "w+")
            data.write("")
            data.close()

            return await bot.send_message(message.chat.id, text_message, parse_mode="Markdown")
        else:
            if await is_admin_group(message.chat.id, message.bot.id):
                await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        print("ASSOCIATIONS COMMAND: %s" % repr(e))

# Types: text
@dp.message_handler(content_types=["text"])
async def check_all_messages(message):
    try:
        for_bad_word = open('bad_words.txt', encoding="utf8")
        bad_words = for_bad_word.read().split(",")
        for word in bad_words:
            if word.lower() in message.text.lower():
                if await is_admin_group(message.chat.id, message.bot.id):
                    await bot.delete_message(message.chat.id, message.message_id)
                await message.answer("ü§¨ –ü–æ–ø—Ä–æ—à—É –Ω–µ –≤—ã—Ä–∞–∂–∞—Ç—å—Å—è!")
                break

        if is_game_in_chat(message.chat.id) and message.chat.id != message.from_user.id:
            result = get_params_game(message.chat.id)
            if "ASSOCIATIONS" in str(result):
                data = open('chats/associations/%d.txt' % message.chat.id)
                read_text = data.read()
                data.close()
                text = read_text.split(',')
                for item in text:
                    if message.text.lower() == item.lower():
                        data = open('chats/associations/%d.txt' % message.chat.id, "w")
                        data.write(read_text.replace("%s," % item, ""))
                        data.close()

                        accept = ["–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ!", "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ!", "–£–º–Ω–æ!", "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ!", "–í–æ—Å—Ö–∏—Ç–∏—Ç–µ–ª—å–Ω–æ!", "–ú–æ–ª–æ–¥–µ—Ü!", "–ì–µ–Ω–∏–π!", "–ë–ª–µ—Å—Ç—è—â–µ!"]
                        RANDOM_POS = random.randint(0, len(accept))
                        await message.reply("üçç %s\n*%s* –∑–∞—Å—á–∏—Ç–∞–Ω–æ\n\n‚ö° +%d –û—á–∫–æ–≤" % (accept[RANDOM_POS], message.text, len(message.text) / 2), parse_mode="Markdown")

                        main_file = open("chats/%d.txt" % message.chat.id)
                        text = main_file.read()
                        main_file.close()
                        if str(message.from_user.id) in text:
                            result = text.replace("ASSOCIATIONS|", "").split("|")
                            for_result = 0
                            for item in result:
                                if item == str(message.from_user.id):
                                    summa = (len(message.text) / 2) + int(result[for_result + 2])
                                    need_replace = "%s|%s|%s" % (result[for_result],result[for_result + 1],result[for_result + 2])
                                    replace_text = "%s|%s|%s" % (result[for_result],result[for_result + 1],int(summa))
                                    data = text.replace(need_replace, replace_text)
                                    text = data
                                    break
                                for_result+=1
                        else:
                            text += "|%d|%s|%d" % (message.from_user.id,message.from_user.first_name,len(message.text) / 2)
                        main_file = open("chats/%d.txt" % message.chat.id, "w")
                        main_file.write(text)
                        main_file.close()
                        break
    except Exception as e:
        print("READ TEXT: %s" % repr(e))

@dp.chosen_inline_handler(lambda selected_inline_result: True)
def test_chosen(selected_inline_result):
    print(selected_inline_result)

# Types: callback keyboard
@dp.callback_query_handler(lambda callback_query: True)
async def some_callback_handler(callback_query: types.CallbackQuery):
    print(callback_query.data)
    try:
        code = callback_query.data
        if code == "–ò–≥—Ä—ã":
            message = "üçç *–ò–≥—Ä—ã*\n\n/crosses - –ò–≥—Ä–∞ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏\nüìå –ò–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö\n\n/associations - –ò–≥—Ä–∞ –≤ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏\nüìå –ë–æ—Ç –ø–∏—à–µ—Ç —Å–ª–æ–≤–æ, –∞ —Ç—ã –ø—Ä–∏–¥—É–º—ã–≤–∞–µ—à—å –∫ –Ω–µ–º—É —Å–ª–æ–≤–æ-–∞—Å—Å–æ—Ü–∏–∞—Ü–∏—é, —á–µ–º –¥–ª–∏–Ω–Ω–µ–µ —Å–ª–æ–≤–æ, —Ç–µ–º –±–æ–ª—å—à–µ –æ—á–∫–æ–≤\n\n/fanta - –ò–≥—Ä–∞ –¥–ª—è '–∫—É–ª—å—Ç—É—Ä–Ω–æ–π' –ø–æ—Å–∏–¥–µ–ª–∫–∏ üîû"
            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=message, parse_mode="Markdown",reply_markup=None)
        elif code == "–ü–æ–º–æ—â—å":
            message = "üçç *–ü–æ–º–æ—â—å*\n\n–í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É\n\nüìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: */bag [–¢–µ–∫—Å—Ç]*"
            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=message, parse_mode="Markdown",reply_markup=None)
        elif code == "–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏":

            if is_have_user(callback_query.message.from_user.id) == False:
                return bot.answer_callback_query(callback_query_id=callback_query.id, text="üçç –í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –¥—Ä—É–≥–æ–π –∏–≥—Ä–µ!", show_alert=True)

            if is_game_in_chat(callback_query.message.chat.id):
                name_file = "chats/%d.txt" % callback_query.message.chat.id
                result = get_params_game(callback_query.message.chat.id).replace("CROSSES|", "").split("|")
                if int(result[0]) != callback_query.from_user.id and int(result[2]) == 0:
                    data = open(name_file, "w+")
                    data.write("CROSSES|%s|%s|%s|%s|CROSS|%d|1|0|0|0|0|0|0|0|0|0" % (result[0], result[1], callback_query.from_user.id, callback_query.from_user.first_name, callback_query.message.message_id))
                    data.close()

                    set_user_game(callback_query.from_user.id, callback_query.message.chat.id)

                    TEXT_KEYBOARD = ["‚è∫","‚è∫","‚è∫","‚è∫","‚è∫","‚è∫","‚è∫","‚è∫","‚è∫"]
                    TEXT_CALLBACK = [1, 2, 3, 4, 5, 6, 7, 8, 9]

                    buttons = [types.InlineKeyboardButton(text=TEXT_KEYBOARD[0], callback_data=TEXT_CALLBACK[0]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[1], callback_data=TEXT_CALLBACK[1]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[2], callback_data=TEXT_CALLBACK[2]),
                    types.InlineKeyboardButton(text=TEXT_KEYBOARD[3], callback_data=TEXT_CALLBACK[3]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[4], callback_data=TEXT_CALLBACK[4]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[5], callback_data=TEXT_CALLBACK[5]),
                    types.InlineKeyboardButton(text=TEXT_KEYBOARD[6], callback_data=TEXT_CALLBACK[6]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[7], callback_data=TEXT_CALLBACK[7]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[8], callback_data=TEXT_CALLBACK[8])]
                    keyboard = types.InlineKeyboardMarkup(row_width=3)
                    keyboard.add(*buttons)

                    message = "üçç –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\n‚åõ –ù–∞ —Ö–æ–¥: *60 —Å–µ–∫—É–Ω–¥*\n\n‚ùå [%s](tg://user?id=%s) —Ö–æ–¥–∏—Ç –∫—Ä–µ—Å—Ç–∏–∫–∞–º–∏\n‚≠ï [%s](tg://user?id=%s) —Ö–æ–¥–∏—Ç –Ω–æ–ª–∏–∫–∞–º–∏\n\n–ü–µ—Ä–≤—ã–º —Ö–æ–¥–∏—Ç: [%s](tg://user?id=%s) ‚ùå" % (result[1], result[0], callback_query.from_user.first_name, callback_query.from_user.id, result[1], result[0])
                    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=message, parse_mode="Markdown",reply_markup=keyboard)

                    await asyncio.sleep(60)
                    flag = get_params_game(callback_query.message.chat.id).replace("CROSSES|", "").split("|")
                    if int(flag[6]) == 1:
                        message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s) - –ù–µ —Å–¥–µ–ª–∞–ª(-–∞) —Ö–æ–¥\n‚≠ï [%s](tg://user?id=%s)" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],flag[1], flag[0], flag[3], flag[2])
                        data = open(name_file, "w+")
                        data.write("")
                        data.close()
                        keyboard = None
                        return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=message, parse_mode="Markdown",reply_markup=keyboard)
                
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text="üçç –í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –¥—Ä—É–≥–æ–π –∏–≥—Ä–µ!", show_alert=True)

            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text="üçç *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!*", parse_mode="Markdown",reply_markup=None)
        elif code == "–í—ã–±—Ä–∞–Ω–æ":
            return await bot.answer_callback_query(callback_query_id=callback_query.id, text="üçç –ü–æ–∑–∏—Ü–∏—è —É–∂–µ –∑–∞–Ω—è—Ç–∞!", show_alert=True)
        elif code == "–î–∞–ª—å—à–µ":
            buttons  = [types.InlineKeyboardButton(text='–î–∞–ª—å—à–µ', callback_data="–î–∞–ª—å—à–µ")] 
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            keyboard.add(*buttons)

            data = open("fanta_message.txt", encoding="utf8")
            mission = data.read().replace("\\n", "\n").split("|")
            data.close()

            select_mission = random.randint(0,len(mission)) - 1
            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text="üçç %s" % mission[select_mission], parse_mode="Markdown",reply_markup=keyboard)
        elif code == "1" or code == "2" or code == "3" or code == "4" or code == "5" or code == "6" or code == "7" or code == "8" or code == "9":
            if is_game_in_chat(callback_query.message.chat.id):
                result = get_params_game(callback_query.message.chat.id).replace("CROSSES|", "").split("|")
                if (int(result[0]) == callback_query.from_user.id and result[4] == "CROSS") or (int(result[2]) == callback_query.from_user.id and result[4] == "ZERO"):
                    name_file = "chats/%d.txt" % callback_query.message.chat.id
                    TEXT_KEYBOARD = ["‚è∫","‚è∫","‚è∫","‚è∫","‚è∫","‚è∫","‚è∫","‚è∫","‚è∫"]
                    TEXT_CALLBACK = ["1", "2", "3", "4", "5", "6", "7", "8", "9"]

                    code = int(code)
                    message = "–î–ª—è —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"
                    check_pos = []
                    write_message = "EOS"
                    for a in range(9):
                        check_pos.append(int(result[a+7]))

                    if int(result[0]) == callback_query.from_user.id and result[4] == "CROSS":
                        message = "üçç –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\n‚åõ –ù–∞ —Ö–æ–¥: *60 —Å–µ–∫—É–Ω–¥*\n\n‚ùå [%s](tg://user?id=%s) —Ö–æ–¥–∏—Ç –∫—Ä–µ—Å—Ç–∏–∫–∞–º–∏\n‚≠ï [%s](tg://user?id=%s) —Ö–æ–¥–∏—Ç –Ω–æ–ª–∏–∫–∞–º–∏\n\n–°–µ–π—á–∞—Å —Ö–æ–¥–∏—Ç: [%s](tg://user?id=%s) ‚≠ï" % (result[1], result[0], result[3], result[1], result[3], result[1])
                        check_pos[code - 1] = 2
                        write_message = "CROSSES|%s|%s|%s|%s|ZERO|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d" % (result[0], result[1], result[2], result[3], callback_query.message.message_id, int(result[6]) + 1, check_pos[0],check_pos[1],check_pos[2],check_pos[3],check_pos[4],check_pos[5],check_pos[6],check_pos[7],check_pos[8])
                    else:
                        message = "üçç –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\n‚åõ –ù–∞ —Ö–æ–¥: *60 —Å–µ–∫—É–Ω–¥*\n\n‚ùå [%s](tg://user?id=%s) —Ö–æ–¥–∏—Ç –∫—Ä–µ—Å—Ç–∏–∫–∞–º–∏\n‚≠ï [%s](tg://user?id=%s) —Ö–æ–¥–∏—Ç –Ω–æ–ª–∏–∫–∞–º–∏\n\n–°–µ–π—á–∞—Å —Ö–æ–¥–∏—Ç: [%s](tg://user?id=%s) ‚ùå" % (result[1], result[0], result[3], result[1], result[1], result[0])
                        check_pos[code - 1] = 3
                        write_message = "CROSSES|%s|%s|%s|%s|CROSS|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d" % (result[0], result[1], result[2], result[3], callback_query.message.message_id, int(result[6]) + 1, check_pos[0],check_pos[1],check_pos[2],check_pos[3],check_pos[4],check_pos[5],check_pos[6],check_pos[7],check_pos[8])
                    
                    data = open(name_file, "w+")
                    data.write(write_message)
                    data.close()
                    for i in range(9):
                        if check_pos[i] == 2:
                            TEXT_KEYBOARD[i] = "‚ùå"
                            TEXT_CALLBACK[i] = "–í—ã–±—Ä–∞–Ω–æ"
                        elif check_pos[i] == 3:
                            TEXT_KEYBOARD[i] = "‚≠ï"
                            TEXT_CALLBACK[i] = "–í—ã–±—Ä–∞–Ω–æ"

                    DESTROY_MATCH = False
                    WHO_WIN = 0

                    if check_pos[0] != 0 and check_pos[0] == check_pos[1] and check_pos[1] == check_pos[2]:
                        if check_pos[0] == 2:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s) - üëë\n‚≠ï [%s](tg://user?id=%s)" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[1]
                        else:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s)\n‚≠ï [%s](tg://user?id=%s) - üëë" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[2]
                        DESTROY_MATCH = True
                    elif check_pos[3] != 0 and check_pos[3] == check_pos[4] and check_pos[4] == check_pos[5]:
                        if check_pos[3] == 2:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s) - üëë\n‚≠ï [%s](tg://user?id=%s)" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                        else:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s)\n‚≠ï [%s](tg://user?id=%s) - üëë" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                        DESTROY_MATCH = True
                    elif check_pos[6] != 0 and check_pos[6] == check_pos[7] and check_pos[7] == check_pos[8]:
                        if check_pos[6] == 2:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s) - üëë\n‚≠ï [%s](tg://user?id=%s)" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[1]
                        else:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s)\n‚≠ï [%s](tg://user?id=%s) - üëë" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[2]
                        DESTROY_MATCH = True
                    elif check_pos[0] != 0 and check_pos[0] == check_pos[3] and check_pos[3] == check_pos[6]:
                        if check_pos[0] == 2:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s) - üëë\n‚≠ï [%s](tg://user?id=%s)" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[1]
                        else:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s)\n‚≠ï [%s](tg://user?id=%s) - üëë" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[2]
                        DESTROY_MATCH = True
                    elif check_pos[1] != 0 and check_pos[1] == check_pos[4] and check_pos[4] == check_pos[7]:
                        if check_pos[1] == 2:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s) - üëë\n‚≠ï [%s](tg://user?id=%s)" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[1]
                        else:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s)\n‚≠ï [%s](tg://user?id=%s) - üëë" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[2]
                        DESTROY_MATCH = True
                    elif check_pos[2] != 0 and check_pos[2] == check_pos[5] and check_pos[5] == check_pos[8]:
                        if check_pos[2] == 2:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s) - üëë\n‚≠ï [%s](tg://user?id=%s)" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[1]
                        else:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s)\n‚≠ï [%s](tg://user?id=%s) - üëë" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[2]
                        DESTROY_MATCH = True
                    elif check_pos[0] != 0 and check_pos[0] == check_pos[4] and check_pos[4] == check_pos[8]:
                        if check_pos[0] == 2:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s) - üëë\n‚≠ï [%s](tg://user?id=%s)" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[1]
                        else:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s)\n‚≠ï [%s](tg://user?id=%s) - üëë" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[2]
                        DESTROY_MATCH = True
                    elif check_pos[2] != 0 and check_pos[2] == check_pos[4] and check_pos[4] == check_pos[6]:
                        if check_pos[2] == 2:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s) - üëë\n‚≠ï [%s](tg://user?id=%s)" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[1]
                        else:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s)\n‚≠ï [%s](tg://user?id=%s) - üëë" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                            WHO_WIN = result[2]
                        DESTROY_MATCH = True
                    elif check_pos[0] != 0 and check_pos[1] != 0 and check_pos[2] != 0 and check_pos[3] != 0 and check_pos[4] != 0 and check_pos[5] != 0 and check_pos[6] != 0 and check_pos[7] != 0 and check_pos[8] != 0:
                        message = "üçç *–ù–∏—á—å—è!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s)\n‚≠ï [%s](tg://user?id=%s)" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                        DESTROY_MATCH = True

                    buttons = [types.InlineKeyboardButton(text=TEXT_KEYBOARD[0], callback_data=TEXT_CALLBACK[0]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[1], callback_data=TEXT_CALLBACK[1]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[2], callback_data=TEXT_CALLBACK[2]),
                    types.InlineKeyboardButton(text=TEXT_KEYBOARD[3], callback_data=TEXT_CALLBACK[3]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[4], callback_data=TEXT_CALLBACK[4]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[5], callback_data=TEXT_CALLBACK[5]),
                    types.InlineKeyboardButton(text=TEXT_KEYBOARD[6], callback_data=TEXT_CALLBACK[6]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[7], callback_data=TEXT_CALLBACK[7]),types.InlineKeyboardButton(text=TEXT_KEYBOARD[8], callback_data=TEXT_CALLBACK[8])]
                    keyboard = types.InlineKeyboardMarkup(row_width=3)
                    keyboard.add(*buttons)

                    if DESTROY_MATCH:
                        data = open(name_file, "w+")
                        data.write("")
                        data.close()
                        keyboard = None

                    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=message, parse_mode="Markdown",reply_markup=keyboard)
                    await asyncio.sleep(60)
                    flag = get_params_game(callback_query.message.chat.id).replace("CROSSES|", "").split("|")
                    if int(flag[6]) == int(result[6]) + 1:
                        if flag[4] == "CROSS":
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s) - –ù–µ —Å–¥–µ–ª–∞–ª(-–∞) —Ö–æ–¥\n‚≠ï [%s](tg://user?id=%s)" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                        else:
                            message = "üçç *–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!*\n\n%s | %s | %s\n%s | %s | %s\n%s | %s | %s\n\n–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n‚ùå [%s](tg://user?id=%s)\n‚≠ï [%s](tg://user?id=%s) - –ù–µ —Å–¥–µ–ª–∞–ª(-–∞) —Ö–æ–¥" % (TEXT_KEYBOARD[0],TEXT_KEYBOARD[1],TEXT_KEYBOARD[2],TEXT_KEYBOARD[3],TEXT_KEYBOARD[4],TEXT_KEYBOARD[5],TEXT_KEYBOARD[6],TEXT_KEYBOARD[7],TEXT_KEYBOARD[8],result[1], result[0], result[3], result[2])
                        data = open(name_file, "w+")
                        data.write("")
                        data.close()
                        keyboard = None

                        set_user_game(int(result[0]), "")
                        set_user_game(int(result[2]), "")

                        return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=message, parse_mode="Markdown",reply_markup=keyboard)
                    
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text="üçç –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ö–æ–¥–∏—Ç—å!", show_alert=True)
            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text="üçç *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!*", parse_mode="Markdown",reply_markup=None)
    except Exception as e:
        print("CALLBACK=%s: %s" % (code,repr(e)))

if __name__ == '__main__':
    try:
        # Start bot
        executor.start_polling(dp, skip_updates=True)
    except Exception as e:
        print(repr(e))
